# Generated by Django 5.0.4 on 2024-05-31 08:26

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Applied',
            fields=[
                ('appliedid', models.AutoField(db_column='appliedId', primary_key=True, serialize=False)),
                ('appliedlectureid', models.IntegerField(db_column='appliedLectureId')),
                ('applieduserid', models.IntegerField(db_column='appliedUserId')),
            ],
            options={
                'db_table': 'applied',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('branchid', models.AutoField(db_column='branchId', primary_key=True, serialize=False)),
                ('branchname', models.CharField(db_column='branchName', max_length=255, unique=True)),
                ('branchaddress', models.CharField(db_column='branchAddress', max_length=255)),
                ('centeridofbranch', models.IntegerField(db_column='centerIdOfBranch')),
            ],
            options={
                'db_table': 'branches',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('categoryid', models.AutoField(db_column='categoryId', primary_key=True, serialize=False)),
                ('categoryname', models.CharField(db_column='categoryName', max_length=100)),
                ('targetid', models.IntegerField(db_column='targetId')),
            ],
            options={
                'db_table': 'categories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Centers',
            fields=[
                ('centerid', models.AutoField(db_column='centerId', primary_key=True, serialize=False)),
                ('centername', models.CharField(db_column='centerName', max_length=90, unique=True)),
                ('centertype', models.CharField(db_column='centerType', max_length=45)),
                ('centerurl', models.CharField(db_column='centerUrl', max_length=200)),
            ],
            options={
                'db_table': 'centers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lectures',
            fields=[
                ('lectureid', models.AutoField(db_column='lectureId', primary_key=True, serialize=False)),
                ('center', models.CharField(max_length=90)),
                ('type', models.CharField(max_length=50)),
                ('region', models.CharField(max_length=60)),
                ('branch', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('target', models.CharField(max_length=90)),
                ('category', models.CharField(max_length=90)),
                ('title', models.CharField(max_length=300)),
                ('url', models.CharField(max_length=400, unique=True)),
                ('src', models.TextField()),
                ('content', models.TextField()),
                ('price', models.IntegerField()),
                ('adult', models.CharField(blank=True, max_length=50, null=True)),
                ('kid', models.CharField(blank=True, max_length=45, null=True)),
                ('baby', models.CharField(blank=True, max_length=45, null=True)),
                ('lecturestart', models.DateTimeField(db_column='lectureStart')),
                ('lectureend', models.DateTimeField(db_column='lectureEnd')),
                ('enrollstart', models.DateTimeField(blank=True, db_column='enrollStart', null=True)),
                ('enrollend', models.DateTimeField(blank=True, db_column='enrollEnd', null=True)),
                ('lecturesupplies', models.CharField(blank=True, db_column='lectureSupplies', max_length=200, null=True)),
                ('curriculum', models.JSONField(blank=True, null=True)),
                ('crawleddate', models.DateTimeField(db_column='crawledDate', default=datetime.datetime(2024, 5, 31, 8, 26, 5, 623137, tzinfo=datetime.timezone.utc))),
                ('lecturehelddates', models.CharField(blank=True, db_column='lectureHeldDates', max_length=500, null=True)),
            ],
            options={
                'db_table': 'lectures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Liked',
            fields=[
                ('likedid', models.AutoField(db_column='likedId', primary_key=True, serialize=False)),
                ('likedlectureid', models.IntegerField(db_column='likedLectureId')),
                ('likeduserid', models.IntegerField(db_column='likedUserId')),
            ],
            options={
                'db_table': 'liked',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Targets',
            fields=[
                ('targetid', models.AutoField(db_column='targetId', primary_key=True, serialize=False)),
                ('targetname', models.CharField(db_column='targetName', max_length=45)),
            ],
            options={
                'db_table': 'targets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='userId', primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('nickname', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('registerdate', models.DateTimeField(db_column='registerDate', default=datetime.datetime(2024, 5, 31, 8, 26, 5, 623137, tzinfo=datetime.timezone.utc))),
                ('snsprovider', models.CharField(db_column='snsProvider', max_length=255)),
                ('snsproviderid', models.CharField(db_column='snsProviderId', max_length=255, unique=True)),
                ('wantfcmmessage', models.IntegerField(db_column='wantFcmMessage', default=0)),
                ('fcmtoken', models.CharField(db_column='fcmToken', max_length=500)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
    ]
